<!doctype html><html lang="zh" data-server-rendered="true" data-v-52866abc><head><title>weixin_30824599的博客_CSDN博客-领域博主</title> <meta name="keywords" content=""> <meta name="description" content="vue-route+webpack部署单页路由项目，访问刷新出现404问题,Python规范:提高可读性,监控工具之---Prometheus查询持久性(六)"> <meta http-equiv="content-type" content="text/html;charset=utf-8"> <meta name="viewport" content="initial-scale=1, maximum-scale=1, user-scalable=no, minimal-ui"> <meta name="referrer" content="always"> <meta http-equiv="Cache-Control" content="no-siteapp"> <meta name="applicable-device" content="pc"> <!----> <!----> 
        <script src="https://g.csdnimg.cn/tingyun/1.8.5/user.js"></script>
       <link rel="shortcut icon" href="https://g.csdnimg.cn/static/logo/favicon32.ico" type="image/x-icon"> <link rel="canonical" href="https://blog.csdn.net/weixin_30824599"> <!----> 
          <meta name="toolbar" content={"type":"0"} />
       
          <meta name="report" content={"spm":"1001.2014"} />
       <script src="https://g.csdnimg.cn/??lib/jquery/1.12.4/jquery.min.js,user-tooltip/2.2/user-tooltip.js,lib/qrcode/1.0.0/qrcode.min.js"></script> <script src='//g.csdnimg.cn/common/csdn-report/report.js' type='text/javascript'></script> <!----> 
          <script src="https://g.csdnimg.cn/login-box/1.1.4/login-box.js"></script>
       <!----> <!----><link rel="stylesheet" href="https://csdnimg.cn/release/cmsfe/public/css/common.ef9f4893.css"><link rel="stylesheet" href="https://csdnimg.cn/release/cmsfe/public/css/tpl/user-profile/index.698b4ce1.css"></head> <body><div id="app"><div><div class="main"><div class="page-container page-component"><div data-v-52866abc><div class="home_wrap" data-v-52866abc><div id="floor-user-profile_485" class="grey-bg" data-v-c9883966 data-v-52866abc><div comp-data="[object Object]" floor-data="[object Object]" data-v-80922f46 data-v-c9883966><div class="user-profile-head" data-v-d1dbb6f8 data-v-80922f46><div class="user-profile-head-banner" style="background-image:url(https://img-home.csdnimg.cn/images/20210120054229.jpg);" data-v-d1dbb6f8><div class="user-profile-wrapper" data-v-d1dbb6f8><h1 class="user-profile-title" style="color:#fff;" data-v-d1dbb6f8>weixin_30824599的博客</h1> <div class="user-profile-sub-title" style="color:#fff;" data-v-d1dbb6f8></div></div></div> <div class="user-profile-head-info user-profile-wrapper" data-v-d1dbb6f8><div class="user-profile-head-info-t clearfix" data-v-d1dbb6f8><!----> <div class="user-profile-avatar" data-v-d1dbb6f8><img src="https://profile.csdnimg.cn/0/7/2/1_weixin_30824599" alt data-v-d1dbb6f8> <i class="user-gender-male" data-v-d1dbb6f8></i></div> <div class="user-profile-operate-btn" data-v-d1dbb6f8><a href="https://im.csdn.net/im/main.html?userName=weixin_30824599" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5471&quot;}" data-report-query="spm=3001.5471" class="user-profile-black-btn" data-v-d1dbb6f8>私信</a> <a href="javascript:;" data-report-click="{&quot;spm&quot;:&quot;3001.5472&quot;}" class="user-profile-red-btn" data-v-d1dbb6f8>关注</a> <!----></div></div> <div class="user-profile-head-info-m" data-v-d1dbb6f8><div class="user-profile-head-name" data-v-d1dbb6f8><div data-v-d1dbb6f8>weixin_30824599</div> <div title="已加入 CSDN 6年" class="person-code-age" style="background-color:#C7E9FD;color:#1E68D8;" data-v-d1dbb6f8><img src="https://img-home.csdnimg.cn/images/20210108035952.gif" alt data-v-d1dbb6f8> <span data-v-d1dbb6f8>码龄6年</span></div> <div class="user-profile-icon" data-v-d1dbb6f8><a href="https://blog.csdn.net/blogdevteam/article/details/103478461" target="_blank" data-v-d1dbb6f8><img src="https://csdnimg.cn/identity/blog5.png" alt title="博客等级" data-v-d1dbb6f8></a> <a href="https://www.csdn.net/vip" target="_blank" data-v-d1dbb6f8><!----></a> <a href="https://i.csdn.net/#/user-center/auth" target="_blank" data-v-d1dbb6f8><!----></a> <a href="https://i.csdn.net/#/user-center/auth" target="_blank" data-v-d1dbb6f8><!----></a></div></div> <!----></div> <div class="user-profile-head-info-b" data-v-d1dbb6f8><ul data-v-d1dbb6f8><li data-v-d1dbb6f8><div class="user-profile-statistics-num" data-v-d1dbb6f8>448,384</div> <div class="user-profile-statistics-name" data-v-d1dbb6f8>被访问量</div></li> <li data-v-d1dbb6f8><a href="javascript:;" data-v-d1dbb6f8><div class="user-profile-statistics-num no-data" data-v-d1dbb6f8>暂无</div> <div class="user-profile-statistics-name" data-v-d1dbb6f8>原创文章</div></a></li> <li data-v-d1dbb6f8><a href="https://blog.csdn.net/rank/list/total" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5476&quot;}" data-report-query="spm=3001.5476" data-v-d1dbb6f8><div class="user-profile-statistics-num" data-v-d1dbb6f8>42,999</div> <div class="user-profile-statistics-name" data-v-d1dbb6f8>作者排名</div></a></li> <li data-v-d1dbb6f8><a href="javascript:;" data-v-d1dbb6f8><div class="user-profile-statistics-num" data-v-d1dbb6f8>68</div> <div class="user-profile-statistics-name" data-v-d1dbb6f8>粉丝数量</div></a></li></ul></div></div></div> <div class="user-profile-body" data-v-3f0fdf46 data-v-80922f46><div class="user-profile-body-inner" data-v-3f0fdf46><div class="user-profile-body-left" data-v-3f0fdf46><div class="user-profile-aside" data-v-d487ed78 data-v-3f0fdf46><div class="user-general-info single-general-info" data-v-d487ed78><ul data-v-d487ed78><!----> <!----> <li class="user-general-info-join-csdn" data-v-d487ed78><i data-v-d487ed78></i> <span data-v-d487ed78>于</span> <span class="user-general-info-key-word" data-v-d487ed78>2015-08-25</span> <span data-v-d487ed78>加入CSDN</span></li></ul></div> <!----> <div class="user-achievement user-profile-aside-common-box" data-v-d487ed78><div class="aside-common-box-head" data-v-d487ed78>获得成就</div> <div class="aside-common-box-bottom" data-v-d487ed78><div class="aside-common-box-content" data-v-d487ed78><ul data-v-d487ed78><li data-v-d487ed78>
        <i style="background-image: url(https://img-home.csdnimg.cn/images/20210114022819.png)"></i>
        <div>获得<span>78</span>次点赞</div>
      </li><li data-v-d487ed78>
        <i style="background-image: url(https://img-home.csdnimg.cn/images/20210114022831.png)"></i>
        <div>内容获得<span>0</span>次评论</div>
      </li><li data-v-d487ed78>
        <i style="background-image: url(https://img-home.csdnimg.cn/images/20210114022828.png)"></i>
        <div>获得<span>520</span>次收藏</div>
      </li></ul></div></div></div> <div class="user-profile-medal user-profile-aside-common-box" data-v-d487ed78><div class="aside-common-box-head" data-v-d487ed78>荣誉勋章</div> <div class="aside-common-box-bottom" data-v-d487ed78><div class="aside-common-box-content" data-v-d487ed78><ul data-v-d487ed78><li data-nickname="weixin_30824599" data-username="weixin_30824599" data-avatar="https://profile.csdnimg.cn/0/7/2/1_weixin_30824599" data-report-click="{&quot;spm&quot;:&quot;3001.5481&quot;}" class="csdn-user-medal-btn" data-v-d487ed78><img src="https://csdnimg.cn/medal/chaoji1024@240.png" alt data-v-d487ed78></li><li data-nickname="weixin_30824599" data-username="weixin_30824599" data-avatar="https://profile.csdnimg.cn/0/7/2/1_weixin_30824599" data-report-click="{&quot;spm&quot;:&quot;3001.5481&quot;}" class="csdn-user-medal-btn" data-v-d487ed78><img src="https://csdnimg.cn/medal/qixiebiaobing2@240.png" alt data-v-d487ed78></li></ul></div> <button data-nickname="weixin_30824599" data-username="weixin_30824599" data-avatar="https://profile.csdnimg.cn/0/7/2/1_weixin_30824599" data-report-click="{&quot;spm&quot;:&quot;3001.5481&quot;}" class="aside-common-box-bottom-btn csdn-user-medal-btn" data-v-d487ed78>所有勋章<i class="el-icon-arrow-right" data-v-d487ed78></i></button></div></div> <!----> <!----> <!----></div></div> <div class="user-profile-body-right" data-v-3f0fdf46><div class="navList-box" data-v-bb5f5e3e data-v-3f0fdf46><div class="navList" data-v-bb5f5e3e><ul data-v-bb5f5e3e><li class="active" data-v-bb5f5e3e><!---->最近<span class="nav-li-num" data-v-bb5f5e3e></span></li><li data-v-bb5f5e3e><!---->文章<span class="nav-li-num" data-v-bb5f5e3e></span></li><li data-v-bb5f5e3e><!---->资源<span class="nav-li-num" data-v-bb5f5e3e></span></li><li data-v-bb5f5e3e><!---->问答<span class="nav-li-num" data-v-bb5f5e3e></span></li><li data-v-bb5f5e3e><!---->课程<span class="nav-li-num" data-v-bb5f5e3e></span></li><li data-v-bb5f5e3e><!---->帖子<span class="nav-li-num" data-v-bb5f5e3e></span></li><li data-v-bb5f5e3e><!---->收藏<span class="nav-li-num" data-v-bb5f5e3e></span></li><li data-v-bb5f5e3e><!---->关注/订阅<span class="nav-li-num" data-v-bb5f5e3e></span></li></ul> <div class="search-input" data-v-bb5f5e3e><input id="searchInput" type="text" placeholder="搜TA的内容" value="" data-v-bb5f5e3e> <div class="search-btn" data-v-bb5f5e3e><img src="https://img-home.csdnimg.cn/images/20210127052220.png" alt class="search-img" data-v-bb5f5e3e> <img src="https://img-home.csdnimg.cn/images/20210127052218.png" alt class="search-hover-img" data-v-bb5f5e3e></div></div> <div class="m-search-input" data-v-bb5f5e3e><input id="mSearchInput" type="text" placeholder="搜TA的内容" value="" data-v-bb5f5e3e> <div class="m-search-btn" data-v-bb5f5e3e><img src="https://img-home.csdnimg.cn/images/20210127052220.png" alt class="m-search-img" data-v-bb5f5e3e> <img src="https://img-home.csdnimg.cn/images/20210127052218.png" alt class="m-search-hover-img" data-v-bb5f5e3e></div></div></div> <div data-v-bb5f5e3e><div data-v-bb5f5e3e><div data-v-0db42936 data-v-bb5f5e3e><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/96137700" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>jquery 数据图表</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>引用：http://www.oschina.net/code/snippet_197014_12286Jquery实现数据图表数据统计插件统计功能包括了时间序列，可缩放的、时间数据不规则间隔、面积百分比、堆叠和分组列、散射与回归线、花键与倒轴、地区失踪点、柱旋转标签。。。效果如下：在线演示和下载请查看：http://***/Detail.aspx?id...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>22<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 9 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/95669600" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>两道面试题，带你解析Java类加载机制</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>在许多Java面试中，我们经常会看到关于Java类加载机制的考察，例如下面这道题：class Grandpa{    static    {        System.out.println("爷爷在静态代码块");    }}    class Father extends Grandpa{    static    {        Syste...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>18<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 3 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/95113100" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>IE浏览器打不开网页的解决方法</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>前阵子一下子安装了很多软件，后来使用IE游览器的时候，莫名其妙的打不开网页，虽然用其他浏览器（比如谷歌、火狐）可以正常浏览网页，但是由于很多软件内嵌页面都会调用Windows的IE浏览器来加载，所以IE浏览器打不开网页就造成很多麻烦。所以搜寻资料找到了简便的方法，终于修复了IE游览器。这里分享一下经验给大家，希望对大家有所帮助。右键点击IE游览器的属性，在弹出的“Internet 属性”选...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>77<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 3 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/95056000" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>利用nodeJs anywhere搭建本地服务器环境【转载】</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>首先去nodeJs官网下载最新版nodeJs   https://nodejs.org/en/安装成功后win+r打开cmd 输入node -help 或者node -v查看是否安装成功装好后输入 npm install anywhere -g来安装anywhere。注意如果是mac系统会提示你权限不够，需要在代码前加上 sudo获取管理员权限。即sudonp...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>32<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 3 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/94919700" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>传销组织生化环材说（正论）</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>作者：田佳琦传销组织的原罪是通过欺骗、隐瞒事实的手段拉人下水，生化环材利用高中生的懵懂无知来招生，其原罪也是通过欺骗、隐瞒事实的手段拉人入坑。传销组织对其经营的产品进行夸大、虚假的宣传，生化环材号称“21世纪中心学科”，也对其学科进行夸大、虚假的宣传。传销组织的主要形式是不断的发展下线，生化环材的导师欺压学生，学生熬出头之后当上导师欺压新的学生，也是不断的发展下线。传销组织喜欢给人灌输...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>65<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102398797" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Linq 将两个查询结果合称为一个</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>1       var handsonitems = from a in db.DltQuestionHandson 2                                join c in db.DltBdChapter 3                                on new { a.ChapterCode } equals new {...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>118<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102398798" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>LinQ in 写法</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>有时候会碰到一个需求，又一堆id 1,2,3,4，循环遍历id再去数据库查不仅效率低，而且代码难看，可以用in来实现：1 string[] codes = item.ExamPaperCode.Split(";");2 var courses = from a in db.DltBdCourse3                   where codes.Contain...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>139<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102398795" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>dotnet验证参数</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>组长提了一个需求，前端传递过来参数的时候，我们要验证一下参数是否都传递过来了，所以我专门写了一个验证工具类，调用就好了。第一个参数为 前端传递到Controller封装的实体类，第二个参数为这个实体类中哪些参数是必须要验证的，用list封装。我把需要验证的参数统一写到了一个配置类，类似如下格式：1   public const string COURSE_ADD_P...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>72<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102398794" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>StringBuilder删除最后的字符</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>stringbuilder碰到拼接XXx；XXX；这样的字符的时候，往往需要删除最后一个字符，通过remove(起始索引，向右移除的个数)可以实现。 1                 StringBuilder sb = new StringBuilder(); 2                 //课程 3                 if (item.E...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>655<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102398791" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>dotnet  + LinQ 按照指定的字段 和 排序方式排序</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>1  /// &lt;summary&gt; 2         /// 根据指定属性名称对序列进行排序 3         /// &lt;/summary&gt; 4         /// &lt;typeparam name="TSource"&gt;source中的元素的类型&lt;/typeparam&gt; 5         /// &lt;para...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>47<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102398789" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>dotnet中文字符工具类</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>支持繁体简体互换。 1 using System; 2 using System.Collections.Generic; 3 using System.IO; 4 using System.Linq; 5 using System.Runtime.InteropServices; 6 using System.Threading.Tasks; 7  ...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>69<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263859" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Django中间件</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>Django中间件一、Django中间件简介​ django中间件是类似于是django的保安，请求的时候需要先经过中间件才能到达django后端(urls,views,templates,models)，响应走的时候也需要经过中间件才能到达web服务网关接口。Django请求生命周期缓存数据库：当请求经过第一个中间件的时候，Django会去缓存数据库看看，当前请求资源是不是已...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>60<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263858" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Django框架-模型层</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>Django框架-模型层一、单表查询之必知必会13条1、时间字段中的两个关键性参数create_time = models.DateField()  # 年月日create_time = models.DateTimeField()  # 年月日时分秒# 两个关键性参数# auto_now:每次操作数据 都会自动刷新当前操作的时间# auto_now_add:在创建数据的时...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>62<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263857" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Django框架-路由层</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>Django框架-路由层一、URL配置（URLconf）1、基本格式from django.conf.urls import urlurlpatterns = [     url(正则表达式, views视图函数，参数，别名),]2、参数说明正则表达式：一个正则表达式字符串views视图函数：一个可调用对象，通常为一个视图函数或一个指定视图函数路径的字符串参数：可选...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>50<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263856" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>多对多三种创建方式、forms组件、cookies与session</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>多对多三种创建方式、forms组件、cookies与session一、多对多三种创建方式1、全自动# 优势:不需要你手动创建第三张表# 不足:由于第三张表不是你手动创建的,也就意味着第三张表字段是固定的无法做扩展class Book(models.Model):    title = models.CharField(max_length=32)    price = mo...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>52<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263855" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>常见的MySQL慢查询优化</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>链接：https://blog.csdn.net/qq_35571554/article/details/82800463转载于:https://www.cnblogs.com/DcentMan/p/11509439.html</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>35<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263854" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Django框架-模板层</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>Django框架-模板层一、模板语法传值1、验证是否python所有的数据类型都可以传递到前端locals()的妙用：该方法虽然好用，但是在某些情况下会造成资源的浪费结论：整型、浮点型、字符串、列表、字典、元组、集合等基本数据类型都可以通过模板语法传值2、传函数名浏览器上显示的是None，后端打印了index，而且由于我们函数没有设置返回值，猜想：给浏览器传一个...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>67<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263852" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Django流程-以登录功能为例</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>Django流程-以登录功能为例一、注意点1、新创建的app一定要先去settings.py注册简写：'app01'完整：'app01.apps.App01Config'2、启动Django项目的时候，一定要确保一个端口号只有一个Django项目占用，不然的话，会容易造成bug（修改代码后刷新页面没有效果）3、用户可以访问的资源，都在url中，只有url中开设相关...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>79<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263853" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Python中的bool类型</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>Python 布尔类型 bool　　python 中布尔值使用常量True 和 False来表示；注意大小写　　比较运算符&lt; &gt; == 等返回的类型就是bool类型；布尔类型通常在 if 和 while 语句中应用　　这边需要注意的是，python中，bool是int的子类（继承int），故 True==1 False==0 是会返回Ture的，有点坑，如要切实...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>574<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263851" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>type和object详解</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>python中的type和object详解关于这篇博客这篇博客主要描述Python的新风格对象(new-style objects)，如下：&lt;type 'type'&gt;和&lt;type 'object'&gt;分别是什么？用户自定义的类和实例之间是怎么联系的？它们和内置类型又是怎么联系的？什么是元类(metaclasses)？Ne...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>115<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263850" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>python中给函数传参是传值还是传引用</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>首先还是应该科普下函数参数传递机制，传值和传引用是什么意思？　　 函数参数传递机制问题在本质上是调用函数（过程）和被调用函数（过程）在调用发生时进行通信的方法问题。基本的参数传递机制有两种：值传递和引用传递。　　值传递（passl-by-value）过程中，被调函数的形式参数作为被调函数的局部变量处理，即在堆栈中开辟了内存空间以存放由主调函数放进来的实参的值，从而成为了实参的一个...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>50<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263849" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>视图、触发器、事务、存储过程、内置函数、流程控制、索引</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>视图、触发器、事务、存储过程、内置函数、流程控制、索引视图触发器事务存储过程内置函数流程控制索引视图1、什么是视图​ 视图就是通过查询得到一张虚拟表，然后保存下来，下次直接使用即可2、为什么要用视图​ 如果要频繁使用一张虚拟表，可以不用重复查询3、如何用视图create view teacher_course asselect * from teache...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>36<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263848" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>模式匹配之kmp算法</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>模式匹配之kmp算法b站视频：https://www.bilibili.com/video/av11866460/https://www.bilibili.com/video/av16828557/?spm_id_from=333.788.videocard.1# 找到模式的prefix_tabledef prefix_table(pattern, prefix, n):   ...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>29<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263846" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>元类+单例</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>元类元类单例转载于:https://www.cnblogs.com/DcentMan/p/11391104.html</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>22<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263845" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>SQL语句，pymysql模块，sql注入问题</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>一、完整版SQL语句的查询select     distinct post,avg(salary) from     table where     id &gt; 1 group by    post`having     avg(salary)&gt;100order by     avg(salary)limit 5,5​ group by：分组之后，分...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>22<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263844" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>外键</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>外键前戏之一对多关系# 定义一张部门员工表id      name        gender      dep_name        dep_desc1           jason           male            教学部             教书育人2           egon            male            外交部  ...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>14<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263841" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>TCP协议下的服务端并发，GIL全局解释器锁，死锁，信号量，event事件，线程q</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>TCP协议下的服务端并发，GIL全局解释器锁，死锁，信号量，event事件，线程q一、TCP协议下的服务端并发'''将不同的功能尽量拆分成不同的函数，拆分出来的功能可以被多个地方使用TCP服务端实现并发    1、将连接循环和通信循环拆分成不同的函数    2、将通信循环做成多线程'''# 服务端import socketfrom threading import T...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>22<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263839" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>进程池与线程池、协程、协程实现TCP服务端并发、IO模型</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>进程池与线程池、协程、协程实现TCP服务端并发、IO模型一、进程池与线程池1、线程池'''开进程开线程都需要消耗资源，只不过两者比较的情况下线程消耗的资源比较少在计算机能够承受范围内最大限度的利用计算机什么是池？    在保证计算机硬件安全的情况下最大限度的利用计算机    池其实是降低了程序的运行效率，但是保证了计算机硬件的安全    （硬件的发展跟不上软件的速度）...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>24<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263836" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>进程间通信与线程</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>进程间通信与线程一、进程间通过队列通信"""队列:先进先出堆栈:先进后出"""from multiprocessing import Queueq = Queue(5)  # 括号内可以传参数 表示的是这个队列的最大存储数# 往队列中添加数据q.put(1)q.put(2)# print(q.full())  # 判断队列是否满了q.put(3)q.put(...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>25<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263837" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>python中的__dict__和dir()的区别</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>Python下一切皆对象，每个对象都有多个属性(attribute)，Python对属性有一套统一的管理方案。__dict__与dir()的区别：dir()是一个函数，返回的是list；__dict__是一个字典，键为属性名，值为属性值；dir()用来寻找一个对象的所有属性，包括__dict__中的属性，__dict__是dir()的子集；并不是所有对象都拥有__di...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>35<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263835" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>单表查询和多表查询</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>单表查询及多表查询单表查询前期表准备create table emp(  id int not null unique auto_increment,  name varchar(20) not null,  sex enum('male','female') not null default 'male', #大部分是男的  age int(3) unsigned not...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>150<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263834" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>并发编程</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>并发编程——进程一、并发与并行并发：看上去像是同时运行并行：真正意义上的同时运行二、程序与进程程序：一坨代码进程：正在运行的代码三、创建进程的两种方式（Windows系统下）# 方式一from multiprocessing import Processimport timedef test(name):    print('%s is running' % ...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>13<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263833" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>存储引擎，MySQL中的数据类型及约束</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>存储引擎，MySQL中的数据类型及约束一、存储引擎1、不同的数据应该有不同的处理机制2、mysql存储引擎​ Innodb：默认的存储引擎，查询速度叫myisam慢，但是更安全​ 支持事务，行锁，外键，所以数据更安全​ 建表的时候Innodb会产生两个文件​ 一个是表结构文件​ 一个是存储数据文件​ myisam：mysql老版本（5.1版本之前）用的存储引擎​ 查询...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>24<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263831" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>网络编程</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>网络编程一、软件开发架构1.c/s架构（client/server）c:客户端s:服务端2.b/s架构（browser/server）b:浏览器s:服务器3.b/s架构本质上也是c/s架构手机端看上去c/s架构比较火,实际上b/s已经在崛起微信支付宝都在做一件事:统一接口手机端之后肯定也是bs比较火服务端:24小时不间断提供服务客户端:什么时候想体验服...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>19<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263832" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>socket模块（套接字模块）</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>socket模块（套接字模块）一、最简单版本（互传一次就结束）# 客户端import socketclient = socket.socket()client.connect(('127.0.0.1', 8080))  # 8080是端口号'''来源百度百科'127.0.0.1'是本机回还地址，不属于任何一个有类别地址类。它代表设备的本地虚拟接口，所以默认被看作是永远不会...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>114<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263829" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>文件的上传</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>文件的上传# 客户端import socketimport osimport jsonimport struct# 创建一个socket对象，不写参数，默认使用TCP协议client = socket.socket()# 客户端连接服务端（ip+port）client.connect(('127.0.0.1', 8080))  # '127.0.0.1是本机回还地址'...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>17<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263830" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>MySQL数据库</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>MySQL数据库一、数据库概念随意的存放到一个文件中，数据格式也是千差万别软件开发目录规范规定了数据 存放的位置ps：数据都是保存在本地的将保存数据的部分，存到一个公共的地方，所有的用户涉及到数据相关，都必须来这个公共地方查找二、数据库之MySQL本质就是一款基于网络通信的应用软件任何基于网络通信的软件，底层都是socket服务端基于socket通信收发消息...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>19<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263827" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>UDP通信</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>UDP协议通信一、特点数据报协议（自带报头）没有双向通道，通信类似于发短信，而TCP协议类似于打电话二、简易版# 服务端import socketserver = socket.socket(type=socket.SOCK_DGRAM)  # UDP协议server.bind(('127.0.0.1',8080))# UDP不需要设置半连接池 它也没有半连接池的概...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>29<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263828" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>反射</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>反射一、什么是反射​ 反射的概念是由Smith在1982年首次提出的，主要是指程序可以访问、检测和修改它本身状态或行为的一种能力（自省）。这一概念的提出很快引发了计算机科学领域关于应用反射性的研究。它首先被程序语言的设计领域所采用,并在Lisp和面向对象方面取得了成绩。​ 反射被称为框架的基石，因为框架的设计者，不可能提前知道你的对象到底是怎么设计的，所以你提供给框架的对象 必须通...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>16<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263826" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>面向对象三大特性之多态性</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>面向对象三大特性之多态性一、概念官方解释：多个不同类对象可以响应同一个方法，产生不同的结果多态不是一种特殊的语法，而是一种状态，特性class Animal:    def __init__(self, name, walk_way):        self.name = name        self.walk_way = walk_way    def walk...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>23<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263825" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>socketserver模块（实现并发）</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>socketserver模块（实现并发）一、基于UDP协议实现的并发# 服务端import socketserverclass MyServer(socketserver.BaseRequestHandler):    def handle(self):        # print('来啦 老弟')        while True:            data...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>21<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263824" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>类对象以及类实例的创建过程</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7># 类对象以及类实例的创建过程class AnimalMeta(type):    def __new__(cls, *args, **kwargs):        print("=======&gt;AnimalMeta__new__%s"%cls)        return type.__new__(cls,*args,**kwargs)    def __init_...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>78<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263823" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>python基础</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>python基础部分基础计算机硬件发展史计算机硬件python入门数据类型及常用方法字符编码文件处理函数初始函数函数进阶装饰器函数迭代器和生成器内置函数和匿名函数递归函数常用模块常用模块模块和包面向对象初始面向对象面向对象进阶网络编程网络编程转载于:https://www.cnblogs.com/DcentMan/p/11380541.h...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>21<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263820" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>元类（metaclass）</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>元类（metaclass）一、什么是元类一切源自于一句话：python中一切皆为对象。既然如此类是不是也是对象呢?class Teacher(object):    school='tsinghua'    def __init__(self,name,age):        self.name=name        self.age=age    def s...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>32<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263821" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>封装</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>封装一、封装的概念​ 将复杂丑陋的，隐私的细节隐藏到内部，对外提供简单的使用接口对外隐藏内部实现细节，并提供访问的接口二、为什么需要封装​ 1、为了保证，关键数据的安全性​ 2、对外部隐藏实现细节，隔离复杂度三、什么时候应该封装​ 1、当有一些数据不希望外界可以直接修改时​ 2、当有一些函数不希望给外界使用时四、如何使用class Person:    def _...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>27<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263819" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>oop（面向对象）中的内置函数</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>oop中的内置函数​ 类中存在一些名字带有双下划线__开头的内置函数， 这些函数会在某些时候被自动调用,例如之前学习的迭代器__init__函数一、isinstance(obj, cls)检查obj是否是cls的对象 class Foo(object):     pass obj = Foo() isinstance(obj, Foo)二、issubclass(sub, ...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>26<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263818" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>继承</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>继承一、什么是继承继承是一种关系，描述两个对象之间，什么是什么的关系在程序中，继承描述的是类和类之间的关系例如a继承了b，a就能直接使用b已经存在的方法和属性a称之为子类，b称之为父类，也称之为基类class A:    text = 'a'    def a(self):        print('from a')        passclass B(A):...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>20<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102263817" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>面向对象编程，类和对象</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>面向对象编程，类和对象一、面向对象1、什么是面向对象​ 面向对象是一种编程思想,是前辈们总结出的经验,指导程序员如何编写出更好的程序 ,核心是对象,程序就是一系列对象的集合, 程序员负责调度控制这些对象来交互着完成任务。2、几个案例案例1：把大象装进冰箱 ?​ 面向过程:​ 1.打开冰箱​ 2.装入大象​ 3.关闭冰箱​ 面向对象:​ 找个具备装大象的技能的对象...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>24<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102254677" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>JS 验证字符串是否能转为json格式</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>var isJSON=function (str) {                if (typeof str == 'string') {                    try {                        var obj = JSON.parse(str);                        if (typeof obj...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>115<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102254674" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Css文字在div中自动换行</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>Css文字在div中自动换行word-break:break-all;文字在div中字段换行转载于:https://www.cnblogs.com/lbonet/p/11548288.html</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>158<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102254671" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>js判断变量是否为整数</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>//返回false则不为整数数字,返回ture则反之var isIntNumber=function(val){    if (isNaN(val) || Math.floor(val) != val)    {          return false;    }    else     {         return true;    } ...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>132<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102254670" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>为什么要使用href=”javascript:void(0);”</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>传送门为什么要使用href=”javascript:void(0);”转载于:https://www.cnblogs.com/lbonet/p/11465178.html</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>48<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102254668" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>js字符串使用占位符拼接</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>传送门js字符串使用占位符拼接转载于:https://www.cnblogs.com/lbonet/p/11452004.html</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>182<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102254667" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>C# Datetime 各种格式</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>传送门:Datetime 在C#中的用法 获取当前时间的各种格式转载于:https://www.cnblogs.com/lbonet/p/11465185.html</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>68<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102254666" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>C#解析json字符串总是多出双引号的原因分析及解决办法</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>传送门C#解析json字符串总是多出双引号的原因分析及解决办法转载于:https://www.cnblogs.com/lbonet/p/11451874.html</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>556<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102254665" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Js 更换html同一父元素下子元素的位置</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>//更换两个元素的位置var exchange=function (el1, el2) {                        　　var ep1 = el1[0].parentNode,                            　　ep2 = el2[0].parentNode,                            　　index1 =...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>106<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102254663" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>JS 正则验证字符串中是否含有数字</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>var test_text="abc123";//2.if (new RegExp("[0-9]").test(test_text)) {     return false;}转载于:https://www.cnblogs.com/lbonet/p/11435275.html</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>863<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102254662" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>不错的MVC文章</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>传送门不错的MVC文章转载于:https://www.cnblogs.com/lbonet/p/11418902.html</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>26<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102231802" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>TypeScript从入门到Vue项目迁移</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>1. 前言ES6的普及，大大简化了JavaScript的表达方式大型项目中，js没有类型检查、表达方式灵活，多人协作代码调试和维护成本高2. 定义TypeScript 是 JavaScript 的一个超集，而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程，可以理解成是 js 的强类型版本这里的Type：类型（指的就是静态类型检查）3. 走马观花学一下npm安装...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>103<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102064635" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>使用POI操作Excel时对事先写入模板的公式强制执行</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>场景：POI读取Excel模板。当使用POI操作Excel时，发现由POI生成的公式能够在打开Excel是被执行，而事先手工写入Excel模板文件的公式则不自动被调用，必须手动双击该Cell才能生效。采取的办法：1.使用cell.setCellFormula方法重新在制定Cell里写入公式。2.使用sheet.setForceFormulaRecalculati...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>52<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/102064636" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>centos7下python3和pycharm安装</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>1.python3安装直接到官网下载或在以下地址下载让后解压安装下载地址：https://www.python.org/ftp/python/安装参考博客：https://www.cnblogs.com/anxminise/p/9650206.html我的安装时python3.7.4版https://www.cnblogs.com/s-seven/p/9105973....</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>103<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101958769" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>vue_插槽的理解和使用</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>对于插槽的概念和使用，这是vue的一个难点，这需要我们静下心来，慢慢研究。以下是我这两天通过官网和其他资料的学习和使用总结出来的笔记，如有错误或者有不同见解的，欢迎留言，一起学习。什么是插槽？插槽就是子组件中的提供给父组件使用的一个占位符，用&lt;slot&gt;&lt;/slot&gt; 表示，父组件可以在这个占位符中填充任何模板代码，如 HTML、组件等，填充的内容会替换子...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>94<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101958765" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>vue-route+webpack部署单页路由项目，访问刷新出现404问题</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>问题描述：前端同事使用Vue.js框架，利用vue-route结合webpack编写了一个单页路由项目，运维协助在服务器端配置nginx。部署完成后，访问首页没问题，从首页里打开二级页面没问题，但是所有的二级页面打开后，再次刷新，就会出现404现象问题原因：刷新页面时访问的资源在服务端找不到，因为vue-router设置的路径不是真实存在的路径。如上的404现象，是因为在nginx配...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>78<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101851538" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>监控工具之---Prometheus表达式promQL生产中应用(五)</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>cpu利用率　　方法一：100 - (avg(increase(node_cpu_seconds_total{mode="idle"}[1m])) by (instance) / 60) * 100　　方法二：100 - avg(rate(node_cpu_seconds_total{mode="idle"}[1m])) by (instance)  * 1...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>161<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101851539" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>监控工具之---Prometheus查询持久性(六)</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>查询持续性　　到目前为止，我们只是在表达式浏览器中运行查询。虽然查看该查询的输出很方便，但结果仍然是临时存储在Prometheus服务器上，我们可以通过以下三种方式使查询持久化：记录规则：根据查询创建新指标报警规则：从查询生成警报可视化：使用Grafana等仪表板可视化查询　　记录规则存储在Prometheus服务器上，位于Prometheus服务器加载的文件...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>71<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101851537" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>监控工具之---Prometheus数据可视化Grafana(七)</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>Grafana安装　　安装系统为Ubuntu，配置grafana apt源# sudo add-apt-repository "deb https://packages.grafana.com/oss/deb stable main"　　添加gpg秘钥# wget -q -O - https://packages.grafana.com/gpg.key |...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>85<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101851536" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Grafana Configuration 参数详解(1)</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>---恢复内容开始---　　Granfana Configuration 配置文件grafana.ini包含很多选项，可对其进行调整，调整后重启grafana服务方可生效。Paths配置段#################################### Paths ####################################[paths]# P...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>86<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101851534" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Azure Iaas基础之---创建虚拟机</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>什么是订阅？　　订阅是提前预定的一种方式，它为用户使用Microsoft Azure的所有资源、支付，以及账单提供了链接入口。用户需要对订阅进行充值的操作才能开始使用Azuer的服务。　　在Mincrosoft Azure中，订阅与账户是绑定的，一个账户中可以购买多个订阅，但每个订阅的费用以及计费和使用是独立分开的，没有关联。但对于订阅来说，仅只能与一个账户做绑定。什么是资...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>56<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101851533" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>监控工具之---Prometheus 安装详解(三)</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>Prometheus安装　　在centos、ubuntu等系统上安装步骤如下：　　下载prometheus最新安装包# wget https://github.com/prometheus/prometheus/releases/download/v2.12.0/prometheus-2.12.0.linux-amd64.tar.gz　　将下载好的安装进行解...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>120<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101851532" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Docker技术入门之---网络配置(8)</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>　　Docker启动时会在主机上自动创建一个docker0虚拟网桥，实际上是一个Linux网桥，可以理解为一个软件交换机，他会在挂载其上的接口之间进行转发：如图所示　　　　创建一个Docker容器的时候，同时会创建一对veth pair接口。这对接口一端在容器内，即eth0；另一端在本地并被挂载到docker0网桥，名称以veth开头，通过这种方式，主机可以跟容器通信，容器之间也...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>27<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101851531" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Docker技术入门之---为镜像添加SSH服务(7)</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>本章将详细介绍创建容器的两种方法：基于Docker commit命令创建基于Dockerfile创建基于docker commit命令创建一个容器　　首先，启动一个centos容器　　# docker run -it centos /bin/bash　　安装openssh-server net-tools服务　　# yum -y install op...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>26<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101851530" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Docker技术入门之---使用Dockerfile创建镜像(6)</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>　　Dockerfile是一个文本格式的配置文件，用户可以使用Dockerfile来快速创建自定义的镜像。 Dockerfile指令说明Dockerfile指令说明指令说明FROM指定所创建镜像的基础镜像MAINTAINER指定维护者信息...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>27<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101851529" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Docker技术入门之---Docker端口映射与容器互联(4)</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>　　在实践中，经常会碰到需要多个服务组件容器共同协作的情况，这往往需要多个容器之间有能够互相访问到对方的服务。 　　除了通过网络访问外，Docker还提供了两个很方便的功能来满足服务访问的基本需求： 允许映射容器内应用的服务端口到本地宿主主机互联机制实现多个容器间通过容器名来快速访问 端口映射实现访问容器　　从外部访问容器应用　　在启动容器的时候，...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>35<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101851527" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Docker技术入门之---Docker数据管理(3)</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>　　生产环境中使用Docker的过程中，往往需要对数据进行持久化，或者需要在多个容器之间进行数据␀享，这必然涉及容器的数据管理操作。　　容器中管理数据主要有两种方式：数据卷（Data Volumes）：容器内数据直接映射到本地主机环境；　　数据卷容器（Data Volume Containers）：使用特定容器维护数据卷 。数据卷　　数...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>24<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101851528" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Docker技术入门之---Docker配置阿里云镜像加速(5)</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>　　默认Docker拉取镜像是从Docker Hub上拉取，但由于防火墙的原因，导致镜像下载非常慢。为了提高拉取镜像的速度，可以配置阿里镜像或是网易镜像加速，通过使用经验推荐配置阿里镜像。　　登录阿里云官网，选择如下　　点击管理控制台找到镜像中心---镜像加速器。如图所示　　我使用的是centos，下面讲一下，centos6、centos7如何配置阿里云镜像加...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>49<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101851525" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Kubernetes容器编排技术---Kubernetes基本概念和术语(一)</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>Kubernetes基本概念和术语　　1、Master　　Kubernetes里的Master指的是集群控制节点，每个Kubernetes集群里需要有一个Master节点来负责整个集群的管理和控制，基本上Kubernetes所有的控制命令都是发给它，它来负责具体的执行过程，我们后面所有执行的命令都是在Master节点上运行的。　　Master节点运行关键进程：Kube...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>51<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101851526" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Docker技术入门之---Docker核心概念：镜像、容器、仓库(2)</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>　　Docker的大部分操作都围绕着它的三大核心概念——镜像、容器和仓库而展开。因此，准确把握这三大核心概念对于掌握Docker技术尤为重要 。docker命令结构图根据命令用途本身对其进行了分类，帮助初学者尽快掌握Docker命令，如下图：Docker子命令分类子命令分类子命令Docker环境信息info、version...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>71<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101851524" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>监控工具之---Prometheus 配置exporter四)</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>　　Prometheus提供两种存储方式，分别为本地存储和远端存储。　　本地存储通过Prometheus自带的时序数据库将数据保存在本地，从而实现高性能读写。但是时序数据库毕竟是非集群的数据库，这样就限制了他的存储容量，无法保存大量的历史监控数据，为此，Prometheus引入了远端存储。安装Exporter　　安装了Node Exporter程序，该程序对外暴露了一个用于...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>228<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>1<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101851523" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Docker技术入门之---Docker安装(1)</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>Docker从1.13版本之后采用时间线的方式作为版本号，分为社区版CE和企业版EE。社区版是免费提供给个人开发者和小型团体使用的，企业版会提供额外的收费服务，比如经过官方测试认证过的基础设施、容器、插件等。社区版按照stable和edge两种方式发布，每个季度更新stable版本，如17.06，17.09；每个月份更新edge版本，如17.09，17.10。具体...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>18<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101851521" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Kubernetes容器编排技术---Kubernetes基于kubeadm安装与配置(二)</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>Kubernetes安装与配置准备环境kubernetes-masterubuntu 18.0410.10.0.197kubernetes-node1centos 710.10.0.164kubernets-master配置apt源　　配置kubernets源apt-get update &am...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>62<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101851522" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Kubernetes容器编排技术---kubectl命令行工具用法详解(三)</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>kubectl命令行工具用法详解kubect用法概述　　kubectl命令行的语法如下：　$ kubectl [command] [TYPE] [NAME] [flags]command：子命令，用于操作Kubernetes集群资源对象的命令，例如create、delete、describe、get、apply等。TYPE：资源对象的类型，区分大...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>75<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101784835" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>.net core2.2上传文件总结</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>总结一下.net core的上传文件操作,这里主要分上传到本地的也就是MVC的,另一种是上传到WebAPi的.一、Web端1.新建一个.net core mvc项目2.这里的版本是.net core 2.2.43.新建一个控制器TestControllerusing System;using System.Collections.Generic;usin...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>66<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101784831" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Git创建远程分支并提交代码到远程分支</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>1.可以在VS中新建分支2.可以通过git branch -r 命令查看远端库的分支情况这些红色都是远程的分支3.从已有的分支创建新的分支(如从master分支),创建一个dev分支 (不用vs建分支 可以这样建)4.建立本地到远端仓库的链接 --这样代码才能提交上去使用命令行git push --set-upstream origin d...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>82<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101784829" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>.net core 2.2 中IHttpClientFactory的使用</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>在.net core中使用HttpClient请求api,有很多资源的问题,比如使用using的时候,虽然可以释放资源,但是套接字（socket）也不会立即释放,所以.net core2.1中,新增了IHttpClientFactory.将其用于配置和创建应用中的HttpClient实例。这能带来以下好处：提供一个中心位置，用于命名和配置逻辑HttpClient实例。...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>124<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101784828" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>document.visibilityState 监听浏览器</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>document.hidden：表示页面是否隐藏的布尔值。页面隐藏包括 页面在后台标签页中 或者 浏览器最小化 （注意，页面被其他软件遮盖并不算隐藏，比如打开的 sublime 遮住了浏览器）。document.visibilityState：表示下面 4 个可能状态的值hidden：页面在后台标签页中或者浏览器最小化visible：页面在前台标签页中prerender：...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>157<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101778705" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>ps cc2019 安装教程</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>ps cc2019 安装教程        	                                            	                    posted on 2019-08-18 18:02雪山看雪 阅读(...) 评论(...)  编辑 收藏        ...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>220<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101778703" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>office2019 安装教程</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>office2019 安装教程        	                                            	                    posted on 2019-08-18 17:59雪山看雪 阅读(...) 评论(...)  编辑 收藏       ...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>525<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101778702" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>office2016 安装教程</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>office2016 安装教程        	                                            	                    posted on 2019-08-18 17:56雪山看雪 阅读(...) 评论(...)  编辑 收藏       ...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>476<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101778698" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>office 2010 安装教程</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>office 2010 安装教程        	                                            	                    posted on 2019-08-18 17:42雪山看雪 阅读(...) 评论(...)  编辑 收藏      ...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>248<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>1<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101778696" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>office2007 安装教程</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>office2007 安装教程        	                                            	                    posted on 2019-08-18 11:25雪山看雪 阅读(...) 评论(...)  编辑 收藏       ...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>201<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101778695" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>office2013 安装教程</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>office2013 安装教程        	                                            	                    posted on 2019-08-18 17:52雪山看雪 阅读(...) 评论(...)  编辑 收藏       ...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>322<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101778694" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>office2003 安装教程</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>office2003 安装教程        	                                            	                    posted on 2019-08-18 11:20雪山看雪 阅读(...) 评论(...)  编辑 收藏       ...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>100<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101778692" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>PE系统</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>PE系统        	                                            	                    posted on 2019-08-18 11:16雪山看雪 阅读(...) 评论(...)  编辑 收藏            转载于...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>86<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101778691" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>PDF转换工具</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>PDF转换工具        	                                            	                    posted on 2019-08-18 11:08雪山看雪 阅读(...) 评论(...)  编辑 收藏           ...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>33<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101776041" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>lettcode 上的几道哈希表与链表组合的数据结构题</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>目录                    LRU缓存        LFU缓存        全O(1)的数据结构            lettcode 上的几道哈希表与链表组合的数据结构题下面这几道题都要求在O(1)时间内完成每种操作。LRU缓存LRU是Least Recently Used的缩写，即最近最少使用，是一种常用的页面置换算法，选择最...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>57<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101775307" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>Python规范:提高可读性</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>PEP 8 规范PEP 是 Python Enhancement Proposal 的缩写，翻译过来叫“Python 增强规范”。缩进规范　　PEP 8 规范告诉我们，请选择四个空格的缩进，不要使用 Tab，更不要 Tab 和空格混着用。 第二个要注意的是，每行最大长度请限制在 79 个字符。空行规范　　PEP 8 规定，全局的类和函数的上方需要空两个空行，而类的函数之间需要空...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>89<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101775306" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>30段极简Python代码：这些小技巧你都Get了么</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>学 Python 怎样才最快，当然是实战各种小项目，只有自己去想与写，才记得住规则。本文是 30 个极简任务，初学者可以尝试着自己实现；本文同样也是 30 段代码，Python 开发者也可以看看是不是有没想到的用法。Python 是机器学习最广泛采用的编程语言，它最重要的优势在于编程的易用性。如果读者对基本的 Python 语法已经有一些了解，那么这篇文章可能会给你一些启发。作者简单概...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>983<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>5<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101775305" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>15个Python面试问题</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>引言想找一份Python开发工作吗？那你很可能得证明自己知道如何使用Python。下面这些问题涉及了与Python相关的许多技能，问题的关注点主要是语言本身，不是某个特定的包或模块。每一个问题都可以扩充为一个教程，如果可能的话。某些问题甚至会涉及多个领域。我之前还没有出过和这些题目一样难的面试题，如果你能轻松地回答出来的话，赶紧去找份工作吧！问题1到底什么是Python？你可以在...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>73<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101775301" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>python数据类型详解（全面）</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>1、字符串1.1、如何在Python中使用字符串a、使用单引号(')用单引号括起来表示字符串，例如：str='this is string';print str;b、使用双引号(")双引号中的字符串与单引号中的字符串用法完全相同，例如：str="this is string";print str;c、使用三引号(''')利用三引号，表示多行的字符串，可以在三引号中自...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>78<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div><div data-v-0db42936><article class="blog-list-box" data-v-6fe2b6a7 data-v-0db42936><a href="https://blog.csdn.net/weixin_30824599/article/details/101775302" target="_blank" data-report-click="{&quot;spm&quot;:&quot;3001.5501&quot;}" data-report-query="spm=3001.5501" data-v-6fe2b6a7><div class="blog-list-box-top" data-v-6fe2b6a7><h4 data-v-6fe2b6a7>致Python初学者的六点建议</h4> <!----></div> <div class="blog-list-content" data-v-6fe2b6a7>Python是最容易学习的编程语言之一，其语法近似英语。通常，初学者只会遇到一些小麻烦，如强制缩进、在函数中使用self等。然而，当开始阅读、复制和编辑他人代码时，麻烦就接踵而至了。这里，我将解释五个关于Python的概念，这些概念将有助于初学者修改他人代码。这些建议通过总结Python开发新手在研讨会上遇到的问题以及分析开发者社区的在线讨论编写而成的。这些开发者社区主要关注API的...</div> <div class="blog-list-footer" data-v-6fe2b6a7><div class="blog-list-footer-left" data-v-6fe2b6a7><!----> <div class="article-type article-type-zz" data-v-6fe2b6a7>转载</div> <!----> <div class="view-num-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051656.png" alt data-v-6fe2b6a7> <span class="view-num" data-v-6fe2b6a7>71<span class="two-px" data-v-6fe2b6a7>阅读</span></span></div> <div class="comment-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127051933.png" alt data-v-6fe2b6a7> <span class="comment-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>评论</span></span></div> <div class="give-like-box" data-v-6fe2b6a7><img src="https://img-home.csdnimg.cn/images/20210127052104.png" alt data-v-6fe2b6a7> <span class="give-like-num" data-v-6fe2b6a7>0<span class="two-px" data-v-6fe2b6a7>点赞</span></span></div></div> <div class="blog-list-footer-right" data-v-6fe2b6a7><span data-v-6fe2b6a7>发布</span><span class="message-type" data-v-6fe2b6a7>博客</span><span data-v-6fe2b6a7>于 2 年前</span></div></div></a></article> <!----> <!----> <!----> <!----> <!----></div></div></div> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----></div> <!----> <!----></div></div></div></div></div></div></div></div></div></div> <div>
        <script type="text/javascript" src="https://g.csdnimg.cn/common/csdn-footer/csdn-footer.js" data-isfootertrack="false" defer></script>
      </div></div></div><script> window.__INITIAL_STATE__= {"csrf":"yCRMWjRE-6OyA3GzXO-tNPUWWtsLR6GrYlzM","origin":"http:\u002F\u002Fcms-user.internal.csdn.net","isMobile":false,"cookie":"uuid_tt_dd=10_28717846810-1620311331892-288749;","ip":"171.43.244.233","test":"cms-user.internal.csdn.net-undefined","pageData":{"page":{"pageId":121,"title":"用户主页","keywords":"用户主页","description":"用户主页","ext":{"guide":"1"}},"template":{"templateId":75,"templateComponentName":"user-profile","title":"用户主页","floorList":[{"floorId":485,"floorComponentName":"floor-user-profile","title":"","description":"","indexOrder":1,"componentList":[{"componentName":"baseInfo","componentDataId":"user-profile","componentConfigData":{},"relationType":3},{"componentName":"versionSwitchTips","componentDataId":"blog-user-version-switch","componentConfigData":{},"relationType":3}]}]},"data":{"baseInfo":{"basicModule":{"owner":false,"enterprise":false},"blogModule":{"userName":"weixin_30824599","level":0,"config":"","status":1,"flag":0,"viewCount":0,"blogId":8669977,"originalCount":0,"title":"weixin_30824599的博客","point":0,"skinId":8,"skin":"skin-yellow","commentCount":0,"rank":0,"diggCount":0,"subTitle":"","repostCount":0,"translatedCount":0,"openReward":1,"rewardDescription":"","codeStyle":"","customCss":"","visitedTimes":0,"createdTime":"2019-07-04T10:53:33.000+0000"},"seoModule":{"title":"weixin_30824599的博客_CSDN博客-领域博主","description":"vue-route+webpack部署单页路由项目，访问刷新出现404问题,Python规范:提高可读性,监控工具之---Prometheus查询持久性(六)","keywords":null,"landing":null,"jsonId":null},"userModule":{"avatar":"https:\u002F\u002Fprofile.csdnimg.cn\u002F0\u002F7\u002F2\u002F1_weixin_30824599","username":"weixin_30824599","nickname":"weixin_30824599","vip":false,"follow":false,"blogUrl":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599","imUrl":"https:\u002F\u002Fim.csdn.net\u002Fim\u002Fmain.html?userName=weixin_30824599","hasPersonal":false,"hasCompany":false,"hasEducation":false,"hasEmployee":false,"level":5,"levelIcon":"https:\u002F\u002Fcsdnimg.cn\u002Fidentity\u002Fblog5.png","introduction":"","school":null,"company":null,"registrationTime":"2015-08-25","codeAge":{"icon":"https:\u002F\u002Fimg-home.csdnimg.cn\u002Fimages\u002F20210108035952.gif","background":"#C7E9FD","color":"#1E68D8","desc":"码龄6年"},"gender":1,"defaultBackgroundImg":"https:\u002F\u002Fimg-home.csdnimg.cn\u002Fimages\u002F20210120054229.jpg","hasShowcase":false},"companyModule":null,"achievementModule":{"originalCount":null,"viewCount":"448,384","rank":"42,999","fansCount":"68","achievementList":[{"icon":"https:\u002F\u002Fimg-home.csdnimg.cn\u002Fimages\u002F20210114022819.png","template":"获得###次点赞","variable":"78","url":null},{"icon":"https:\u002F\u002Fimg-home.csdnimg.cn\u002Fimages\u002F20210114022831.png","template":"内容获得###次评论","variable":"0","url":null},{"icon":"https:\u002F\u002Fimg-home.csdnimg.cn\u002Fimages\u002F20210114022828.png","template":"获得###次收藏","variable":"520","url":null}],"rankList":[]},"medalModule":[{"name":"1024超级勋章","medalId":310,"description":"授予原创文章总数达到1024篇的博主，感谢你对CSDN社区的贡献，CSDN与你一起成长。","imageUrl":"https:\u002F\u002Fcsdnimg.cn\u002Fmedal\u002Fchaoji1024@240.png","sourceUrl":"https:\u002F\u002Feditor.csdn.net\u002Fmd\u002F","whetherHave":true},{"name":"勤写标兵Lv2","medalId":316,"description":"授予每个自然周发布4篇到6篇原创IT博文的用户。本勋章将于次周周三上午根据用户上周的博文发布情况由系统自动颁发。","imageUrl":"https:\u002F\u002Fcsdnimg.cn\u002Fmedal\u002Fqixiebiaobing2@240.png","sourceUrl":"https:\u002F\u002Feditor.csdn.net\u002Fmd\u002F","whetherHave":true}],"interestModule":[],"columnModule":null,"customModule":null,"latelyList":[{"type":"blog","formatTime":"9 年前","title":"jquery 数据图表","description":"引用：http:\u002F\u002Fwww.oschina.net\u002Fcode\u002Fsnippet_197014_12286Jquery实现数据图表数据统计插件统计功能包括了时间序列，可缩放的、时间数据不规则间隔、面积百分比、堆叠和分组列、散射与回归线、花键与倒轴、地区失踪点、柱旋转标签。。。效果如下：在线演示和下载请查看：http:\u002F\u002F***\u002FDetail.aspx?id...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1348209060000,"createTime":1348209060000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F96137700","articleType":2,"viewCount":22,"rtype":"article"},{"type":"blog","formatTime":"3 年前","title":"两道面试题，带你解析Java类加载机制","description":"在许多Java面试中，我们经常会看到关于Java类加载机制的考察，例如下面这道题：class Grandpa{    static    {        System.out.println(\"爷爷在静态代码块\");    }}    class Father extends Grandpa{    static    {        Syste...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1530162780000,"createTime":1530162780000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F95669600","articleType":2,"viewCount":18,"rtype":"article"},{"type":"blog","formatTime":"3 年前","title":"IE浏览器打不开网页的解决方法","description":"前阵子一下子安装了很多软件，后来使用IE游览器的时候，莫名其妙的打不开网页，虽然用其他浏览器（比如谷歌、火狐）可以正常浏览网页，但是由于很多软件内嵌页面都会调用Windows的IE浏览器来加载，所以IE浏览器打不开网页就造成很多麻烦。所以搜寻资料找到了简便的方法，终于修复了IE游览器。这里分享一下经验给大家，希望对大家有所帮助。右键点击IE游览器的属性，在弹出的“Internet 属性”选...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1544340480000,"createTime":1544340480000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F95113100","articleType":2,"viewCount":77,"rtype":"article"},{"type":"blog","formatTime":"3 年前","title":"利用nodeJs anywhere搭建本地服务器环境【转载】","description":"首先去nodeJs官网下载最新版nodeJs   https:\u002F\u002Fnodejs.org\u002Fen\u002F安装成功后win+r打开cmd 输入node -help 或者node -v查看是否安装成功装好后输入 npm install anywhere -g来安装anywhere。注意如果是mac系统会提示你权限不够，需要在代码前加上 sudo获取管理员权限。即sudonp...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1532591820000,"createTime":1532591820000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F95056000","articleType":2,"viewCount":32,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"传销组织生化环材说（正论）","description":"作者：田佳琦传销组织的原罪是通过欺骗、隐瞒事实的手段拉人下水，生化环材利用高中生的懵懂无知来招生，其原罪也是通过欺骗、隐瞒事实的手段拉人入坑。传销组织对其经营的产品进行夸大、虚假的宣传，生化环材号称“21世纪中心学科”，也对其学科进行夸大、虚假的宣传。传销组织的主要形式是不断的发展下线，生化环材的导师欺压学生，学生熬出头之后当上导师欺压新的学生，也是不断的发展下线。传销组织喜欢给人灌输...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1548596940000,"createTime":1548596940000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F94919700","articleType":2,"viewCount":65,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Linq 将两个查询结果合称为一个","description":"1       var handsonitems = from a in db.DltQuestionHandson 2                                join c in db.DltBdChapter 3                                on new { a.ChapterCode } equals new {...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1568794800000,"createTime":1570527301000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102398797","articleType":2,"viewCount":118,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"LinQ in 写法","description":"有时候会碰到一个需求，又一堆id 1,2,3,4，循环遍历id再去数据库查不仅效率低，而且代码难看，可以用in来实现：1 string[] codes = item.ExamPaperCode.Split(\";\");2 var courses = from a in db.DltBdCourse3                   where codes.Contain...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1568790960000,"createTime":1570527301000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102398798","articleType":2,"viewCount":139,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"dotnet验证参数","description":"组长提了一个需求，前端传递过来参数的时候，我们要验证一下参数是否都传递过来了，所以我专门写了一个验证工具类，调用就好了。第一个参数为 前端传递到Controller封装的实体类，第二个参数为这个实体类中哪些参数是必须要验证的，用list封装。我把需要验证的参数统一写到了一个配置类，类似如下格式：1   public const string COURSE_ADD_P...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1565860440000,"createTime":1570527299000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102398795","articleType":2,"viewCount":72,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"StringBuilder删除最后的字符","description":"stringbuilder碰到拼接XXx；XXX；这样的字符的时候，往往需要删除最后一个字符，通过remove(起始索引，向右移除的个数)可以实现。 1                 StringBuilder sb = new StringBuilder(); 2                 \u002F\u002F课程 3                 if (item.E...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1568790780000,"createTime":1570527299000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102398794","articleType":2,"viewCount":655,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"dotnet  + LinQ 按照指定的字段 和 排序方式排序","description":"1  \u002F\u002F\u002F &lt;summary&gt; 2         \u002F\u002F\u002F 根据指定属性名称对序列进行排序 3         \u002F\u002F\u002F &lt;\u002Fsummary&gt; 4         \u002F\u002F\u002F &lt;typeparam name=\"TSource\"&gt;source中的元素的类型&lt;\u002Ftypeparam&gt; 5         \u002F\u002F\u002F &lt;para...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1565860200000,"createTime":1570527296000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102398791","articleType":2,"viewCount":47,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"dotnet中文字符工具类","description":"支持繁体简体互换。 1 using System; 2 using System.Collections.Generic; 3 using System.IO; 4 using System.Linq; 5 using System.Runtime.InteropServices; 6 using System.Threading.Tasks; 7  ...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1565860500000,"createTime":1570527296000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102398789","articleType":2,"viewCount":69,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Django中间件","description":"Django中间件一、Django中间件简介​ django中间件是类似于是django的保安，请求的时候需要先经过中间件才能到达django后端(urls,views,templates,models)，响应走的时候也需要经过中间件才能到达web服务网关接口。Django请求生命周期缓存数据库：当请求经过第一个中间件的时候，Django会去缓存数据库看看，当前请求资源是不是已...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1569423960000,"createTime":1570377447000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263859","articleType":2,"viewCount":60,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Django框架-模型层","description":"Django框架-模型层一、单表查询之必知必会13条1、时间字段中的两个关键性参数create_time = models.DateField()  # 年月日create_time = models.DateTimeField()  # 年月日时分秒# 两个关键性参数# auto_now:每次操作数据 都会自动刷新当前操作的时间# auto_now_add:在创建数据的时...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1568903640000,"createTime":1570377445000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263858","articleType":2,"viewCount":62,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Django框架-路由层","description":"Django框架-路由层一、URL配置（URLconf）1、基本格式from django.conf.urls import urlurlpatterns = [     url(正则表达式, views视图函数，参数，别名),]2、参数说明正则表达式：一个正则表达式字符串views视图函数：一个可调用对象，通常为一个视图函数或一个指定视图函数路径的字符串参数：可选...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1568733360000,"createTime":1570377444000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263857","articleType":2,"viewCount":50,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"多对多三种创建方式、forms组件、cookies与session","description":"多对多三种创建方式、forms组件、cookies与session一、多对多三种创建方式1、全自动# 优势:不需要你手动创建第三张表# 不足:由于第三张表不是你手动创建的,也就意味着第三张表字段是固定的无法做扩展class Book(models.Model):    title = models.CharField(max_length=32)    price = mo...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1569337440000,"createTime":1570377443000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263856","articleType":2,"viewCount":52,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"常见的MySQL慢查询优化","description":"链接：https:\u002F\u002Fblog.csdn.net\u002Fqq_35571554\u002Farticle\u002Fdetails\u002F82800463转载于:https:\u002F\u002Fwww.cnblogs.com\u002FDcentMan\u002Fp\u002F11509439.html","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1568214840000,"createTime":1570377442000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263855","articleType":2,"viewCount":35,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Django框架-模板层","description":"Django框架-模板层一、模板语法传值1、验证是否python所有的数据类型都可以传递到前端locals()的妙用：该方法虽然好用，但是在某些情况下会造成资源的浪费结论：整型、浮点型、字符串、列表、字典、元组、集合等基本数据类型都可以通过模板语法传值2、传函数名浏览器上显示的是None，后端打印了index，而且由于我们函数没有设置返回值，猜想：给浏览器传一个...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1568903400000,"createTime":1570377441000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263854","articleType":2,"viewCount":67,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Django流程-以登录功能为例","description":"Django流程-以登录功能为例一、注意点1、新创建的app一定要先去settings.py注册简写：'app01'完整：'app01.apps.App01Config'2、启动Django项目的时候，一定要确保一个端口号只有一个Django项目占用，不然的话，会容易造成bug（修改代码后刷新页面没有效果）3、用户可以访问的资源，都在url中，只有url中开设相关...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1568646480000,"createTime":1570377440000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263852","articleType":2,"viewCount":79,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Python中的bool类型","description":"Python 布尔类型 bool　　python 中布尔值使用常量True 和 False来表示；注意大小写　　比较运算符&lt; &gt; == 等返回的类型就是bool类型；布尔类型通常在 if 和 while 语句中应用　　这边需要注意的是，python中，bool是int的子类（继承int），故 True==1 False==0 是会返回Ture的，有点坑，如要切实...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566834840000,"createTime":1570377440000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263853","articleType":2,"viewCount":574,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"type和object详解","description":"python中的type和object详解关于这篇博客这篇博客主要描述Python的新风格对象(new-style objects)，如下：&lt;type 'type'&gt;和&lt;type 'object'&gt;分别是什么？用户自定义的类和实例之间是怎么联系的？它们和内置类型又是怎么联系的？什么是元类(metaclasses)？Ne...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566395880000,"createTime":1570377439000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263851","articleType":2,"viewCount":115,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"python中给函数传参是传值还是传引用","description":"首先还是应该科普下函数参数传递机制，传值和传引用是什么意思？　　 函数参数传递机制问题在本质上是调用函数（过程）和被调用函数（过程）在调用发生时进行通信的方法问题。基本的参数传递机制有两种：值传递和引用传递。　　值传递（passl-by-value）过程中，被调函数的形式参数作为被调函数的局部变量处理，即在堆栈中开辟了内存空间以存放由主调函数放进来的实参的值，从而成为了实参的一个...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1568127360000,"createTime":1570377438000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263850","articleType":2,"viewCount":50,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"视图、触发器、事务、存储过程、内置函数、流程控制、索引","description":"视图、触发器、事务、存储过程、内置函数、流程控制、索引视图触发器事务存储过程内置函数流程控制索引视图1、什么是视图​ 视图就是通过查询得到一张虚拟表，然后保存下来，下次直接使用即可2、为什么要用视图​ 如果要频繁使用一张虚拟表，可以不用重复查询3、如何用视图create view teacher_course asselect * from teache...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566562920000,"createTime":1570377436000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263849","articleType":2,"viewCount":36,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"模式匹配之kmp算法","description":"模式匹配之kmp算法b站视频：https:\u002F\u002Fwww.bilibili.com\u002Fvideo\u002Fav11866460\u002Fhttps:\u002F\u002Fwww.bilibili.com\u002Fvideo\u002Fav16828557\u002F?spm_id_from=333.788.videocard.1# 找到模式的prefix_tabledef prefix_table(pattern, prefix, n):   ...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566562980000,"createTime":1570377436000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263848","articleType":2,"viewCount":29,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"元类+单例","description":"元类元类单例转载于:https:\u002F\u002Fwww.cnblogs.com\u002FDcentMan\u002Fp\u002F11391104.html","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566391260000,"createTime":1570377435000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263846","articleType":2,"viewCount":22,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"SQL语句，pymysql模块，sql注入问题","description":"一、完整版SQL语句的查询select     distinct post,avg(salary) from     table where     id &gt; 1 group by    post`having     avg(salary)&gt;100order by     avg(salary)limit 5,5​ group by：分组之后，分...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566562860000,"createTime":1570377434000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263845","articleType":2,"viewCount":22,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"外键","description":"外键前戏之一对多关系# 定义一张部门员工表id      name        gender      dep_name        dep_desc1           jason           male            教学部             教书育人2           egon            male            外交部  ...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566387120000,"createTime":1570377433000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263844","articleType":2,"viewCount":14,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"TCP协议下的服务端并发，GIL全局解释器锁，死锁，信号量，event事件，线程q","description":"TCP协议下的服务端并发，GIL全局解释器锁，死锁，信号量，event事件，线程q一、TCP协议下的服务端并发'''将不同的功能尽量拆分成不同的函数，拆分出来的功能可以被多个地方使用TCP服务端实现并发    1、将连接循环和通信循环拆分成不同的函数    2、将通信循环做成多线程'''# 服务端import socketfrom threading import T...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566229260000,"createTime":1570377430000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263841","articleType":2,"viewCount":22,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"进程池与线程池、协程、协程实现TCP服务端并发、IO模型","description":"进程池与线程池、协程、协程实现TCP服务端并发、IO模型一、进程池与线程池1、线程池'''开进程开线程都需要消耗资源，只不过两者比较的情况下线程消耗的资源比较少在计算机能够承受范围内最大限度的利用计算机什么是池？    在保证计算机硬件安全的情况下最大限度的利用计算机    池其实是降低了程序的运行效率，但是保证了计算机硬件的安全    （硬件的发展跟不上软件的速度）...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566229320000,"createTime":1570377428000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263839","articleType":2,"viewCount":24,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"进程间通信与线程","description":"进程间通信与线程一、进程间通过队列通信\"\"\"队列:先进先出堆栈:先进后出\"\"\"from multiprocessing import Queueq = Queue(5)  # 括号内可以传参数 表示的是这个队列的最大存储数# 往队列中添加数据q.put(1)q.put(2)# print(q.full())  # 判断队列是否满了q.put(3)q.put(...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566229320000,"createTime":1570377425000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263836","articleType":2,"viewCount":25,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"python中的__dict__和dir()的区别","description":"Python下一切皆对象，每个对象都有多个属性(attribute)，Python对属性有一套统一的管理方案。__dict__与dir()的区别：dir()是一个函数，返回的是list；__dict__是一个字典，键为属性名，值为属性值；dir()用来寻找一个对象的所有属性，包括__dict__中的属性，__dict__是dir()的子集；并不是所有对象都拥有__di...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566488820000,"createTime":1570377425000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263837","articleType":2,"viewCount":35,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"单表查询和多表查询","description":"单表查询及多表查询单表查询前期表准备create table emp(  id int not null unique auto_increment,  name varchar(20) not null,  sex enum('male','female') not null default 'male', #大部分是男的  age int(3) unsigned not...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566387180000,"createTime":1570377423000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263835","articleType":2,"viewCount":150,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"并发编程","description":"并发编程——进程一、并发与并行并发：看上去像是同时运行并行：真正意义上的同时运行二、程序与进程程序：一坨代码进程：正在运行的代码三、创建进程的两种方式（Windows系统下）# 方式一from multiprocessing import Processimport timedef test(name):    print('%s is running' % ...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566229260000,"createTime":1570377422000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263834","articleType":2,"viewCount":13,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"存储引擎，MySQL中的数据类型及约束","description":"存储引擎，MySQL中的数据类型及约束一、存储引擎1、不同的数据应该有不同的处理机制2、mysql存储引擎​ Innodb：默认的存储引擎，查询速度叫myisam慢，但是更安全​ 支持事务，行锁，外键，所以数据更安全​ 建表的时候Innodb会产生两个文件​ 一个是表结构文件​ 一个是存储数据文件​ myisam：mysql老版本（5.1版本之前）用的存储引擎​ 查询...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566385560000,"createTime":1570377421000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263833","articleType":2,"viewCount":24,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"网络编程","description":"网络编程一、软件开发架构1.c\u002Fs架构（client\u002Fserver）c:客户端s:服务端2.b\u002Fs架构（browser\u002Fserver）b:浏览器s:服务器3.b\u002Fs架构本质上也是c\u002Fs架构手机端看上去c\u002Fs架构比较火,实际上b\u002Fs已经在崛起微信支付宝都在做一件事:统一接口手机端之后肯定也是bs比较火服务端:24小时不间断提供服务客户端:什么时候想体验服...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566229320000,"createTime":1570377420000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263831","articleType":2,"viewCount":19,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"socket模块（套接字模块）","description":"socket模块（套接字模块）一、最简单版本（互传一次就结束）# 客户端import socketclient = socket.socket()client.connect(('127.0.0.1', 8080))  # 8080是端口号'''来源百度百科'127.0.0.1'是本机回还地址，不属于任何一个有类别地址类。它代表设备的本地虚拟接口，所以默认被看作是永远不会...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566229260000,"createTime":1570377420000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263832","articleType":2,"viewCount":114,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"文件的上传","description":"文件的上传# 客户端import socketimport osimport jsonimport struct# 创建一个socket对象，不写参数，默认使用TCP协议client = socket.socket()# 客户端连接服务端（ip+port）client.connect(('127.0.0.1', 8080))  # '127.0.0.1是本机回还地址'...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566229260000,"createTime":1570377418000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263829","articleType":2,"viewCount":17,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"MySQL数据库","description":"MySQL数据库一、数据库概念随意的存放到一个文件中，数据格式也是千差万别软件开发目录规范规定了数据 存放的位置ps：数据都是保存在本地的将保存数据的部分，存到一个公共的地方，所有的用户涉及到数据相关，都必须来这个公共地方查找二、数据库之MySQL本质就是一款基于网络通信的应用软件任何基于网络通信的软件，底层都是socket服务端基于socket通信收发消息...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566229200000,"createTime":1570377418000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263830","articleType":2,"viewCount":19,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"UDP通信","description":"UDP协议通信一、特点数据报协议（自带报头）没有双向通道，通信类似于发短信，而TCP协议类似于打电话二、简易版# 服务端import socketserver = socket.socket(type=socket.SOCK_DGRAM)  # UDP协议server.bind(('127.0.0.1',8080))# UDP不需要设置半连接池 它也没有半连接池的概...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566229260000,"createTime":1570377416000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263827","articleType":2,"viewCount":29,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"反射","description":"反射一、什么是反射​ 反射的概念是由Smith在1982年首次提出的，主要是指程序可以访问、检测和修改它本身状态或行为的一种能力（自省）。这一概念的提出很快引发了计算机科学领域关于应用反射性的研究。它首先被程序语言的设计领域所采用,并在Lisp和面向对象方面取得了成绩。​ 反射被称为框架的基石，因为框架的设计者，不可能提前知道你的对象到底是怎么设计的，所以你提供给框架的对象 必须通...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1565057100000,"createTime":1570377416000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263828","articleType":2,"viewCount":16,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"面向对象三大特性之多态性","description":"面向对象三大特性之多态性一、概念官方解释：多个不同类对象可以响应同一个方法，产生不同的结果多态不是一种特殊的语法，而是一种状态，特性class Animal:    def __init__(self, name, walk_way):        self.name = name        self.walk_way = walk_way    def walk...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1565057100000,"createTime":1570377415000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263826","articleType":2,"viewCount":23,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"socketserver模块（实现并发）","description":"socketserver模块（实现并发）一、基于UDP协议实现的并发# 服务端import socketserverclass MyServer(socketserver.BaseRequestHandler):    def handle(self):        # print('来啦 老弟')        while True:            data...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566229260000,"createTime":1570377414000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263825","articleType":2,"viewCount":21,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"类对象以及类实例的创建过程","description":"# 类对象以及类实例的创建过程class AnimalMeta(type):    def __new__(cls, *args, **kwargs):        print(\"=======&gt;AnimalMeta__new__%s\"%cls)        return type.__new__(cls,*args,**kwargs)    def __init_...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1565057100000,"createTime":1570377413000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263824","articleType":2,"viewCount":78,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"python基础","description":"python基础部分基础计算机硬件发展史计算机硬件python入门数据类型及常用方法字符编码文件处理函数初始函数函数进阶装饰器函数迭代器和生成器内置函数和匿名函数递归函数常用模块常用模块模块和包面向对象初始面向对象面向对象进阶网络编程网络编程转载于:https:\u002F\u002Fwww.cnblogs.com\u002FDcentMan\u002Fp\u002F11380541.h...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566229200000,"createTime":1570377412000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263823","articleType":2,"viewCount":21,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"元类（metaclass）","description":"元类（metaclass）一、什么是元类一切源自于一句话：python中一切皆为对象。既然如此类是不是也是对象呢?class Teacher(object):    school='tsinghua'    def __init__(self,name,age):        self.name=name        self.age=age    def s...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1565057040000,"createTime":1570377411000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263820","articleType":2,"viewCount":32,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"封装","description":"封装一、封装的概念​ 将复杂丑陋的，隐私的细节隐藏到内部，对外提供简单的使用接口对外隐藏内部实现细节，并提供访问的接口二、为什么需要封装​ 1、为了保证，关键数据的安全性​ 2、对外部隐藏实现细节，隔离复杂度三、什么时候应该封装​ 1、当有一些数据不希望外界可以直接修改时​ 2、当有一些函数不希望给外界使用时四、如何使用class Person:    def _...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1565057100000,"createTime":1570377411000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263821","articleType":2,"viewCount":27,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"oop（面向对象）中的内置函数","description":"oop中的内置函数​ 类中存在一些名字带有双下划线__开头的内置函数， 这些函数会在某些时候被自动调用,例如之前学习的迭代器__init__函数一、isinstance(obj, cls)检查obj是否是cls的对象 class Foo(object):     pass obj = Foo() isinstance(obj, Foo)二、issubclass(sub, ...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1565057040000,"createTime":1570377409000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263819","articleType":2,"viewCount":26,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"继承","description":"继承一、什么是继承继承是一种关系，描述两个对象之间，什么是什么的关系在程序中，继承描述的是类和类之间的关系例如a继承了b，a就能直接使用b已经存在的方法和属性a称之为子类，b称之为父类，也称之为基类class A:    text = 'a'    def a(self):        print('from a')        passclass B(A):...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1564063680000,"createTime":1570377409000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263818","articleType":2,"viewCount":20,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"面向对象编程，类和对象","description":"面向对象编程，类和对象一、面向对象1、什么是面向对象​ 面向对象是一种编程思想,是前辈们总结出的经验,指导程序员如何编写出更好的程序 ,核心是对象,程序就是一系列对象的集合, 程序员负责调度控制这些对象来交互着完成任务。2、几个案例案例1：把大象装进冰箱 ?​ 面向过程:​ 1.打开冰箱​ 2.装入大象​ 3.关闭冰箱​ 面向对象:​ 找个具备装大象的技能的对象...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1564063740000,"createTime":1570377407000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102263817","articleType":2,"viewCount":24,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"JS 验证字符串是否能转为json格式","description":"var isJSON=function (str) {                if (typeof str == 'string') {                    try {                        var obj = JSON.parse(str);                        if (typeof obj...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1569225480000,"createTime":1570368927000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102254677","articleType":2,"viewCount":115,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Css文字在div中自动换行","description":"Css文字在div中自动换行word-break:break-all;文字在div中字段换行转载于:https:\u002F\u002Fwww.cnblogs.com\u002Flbonet\u002Fp\u002F11548288.html","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1568865120000,"createTime":1570368925000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102254674","articleType":2,"viewCount":158,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"js判断变量是否为整数","description":"\u002F\u002F返回false则不为整数数字,返回ture则反之var isIntNumber=function(val){    if (isNaN(val) || Math.floor(val) != val)    {          return false;    }    else     {         return true;    } ...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1568864640000,"createTime":1570368923000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102254671","articleType":2,"viewCount":132,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"为什么要使用href=”javascript:void(0);”","description":"传送门为什么要使用href=”javascript:void(0);”转载于:https:\u002F\u002Fwww.cnblogs.com\u002Flbonet\u002Fp\u002F11465178.html","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1567657740000,"createTime":1570368921000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102254670","articleType":2,"viewCount":48,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"js字符串使用占位符拼接","description":"传送门js字符串使用占位符拼接转载于:https:\u002F\u002Fwww.cnblogs.com\u002Flbonet\u002Fp\u002F11452004.html","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1567481340000,"createTime":1570368919000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102254668","articleType":2,"viewCount":182,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"C# Datetime 各种格式","description":"传送门:Datetime 在C#中的用法 获取当前时间的各种格式转载于:https:\u002F\u002Fwww.cnblogs.com\u002Flbonet\u002Fp\u002F11465185.html","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1567657920000,"createTime":1570368918000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102254667","articleType":2,"viewCount":68,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"C#解析json字符串总是多出双引号的原因分析及解决办法","description":"传送门C#解析json字符串总是多出双引号的原因分析及解决办法转载于:https:\u002F\u002Fwww.cnblogs.com\u002Flbonet\u002Fp\u002F11451874.html","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1567480440000,"createTime":1570368917000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102254666","articleType":2,"viewCount":556,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Js 更换html同一父元素下子元素的位置","description":"\u002F\u002F更换两个元素的位置var exchange=function (el1, el2) {                        　　var ep1 = el1[0].parentNode,                            　　ep2 = el2[0].parentNode,                            　　index1 =...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1563499920000,"createTime":1570368916000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102254665","articleType":2,"viewCount":106,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"JS 正则验证字符串中是否含有数字","description":"var test_text=\"abc123\";\u002F\u002F2.if (new RegExp(\"[0-9]\").test(test_text)) {     return false;}转载于:https:\u002F\u002Fwww.cnblogs.com\u002Flbonet\u002Fp\u002F11435275.html","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1567150740000,"createTime":1570368915000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102254663","articleType":2,"viewCount":863,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"不错的MVC文章","description":"传送门不错的MVC文章转载于:https:\u002F\u002Fwww.cnblogs.com\u002Flbonet\u002Fp\u002F11418902.html","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566892980000,"createTime":1570368913000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102254662","articleType":2,"viewCount":26,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"TypeScript从入门到Vue项目迁移","description":"1. 前言ES6的普及，大大简化了JavaScript的表达方式大型项目中，js没有类型检查、表达方式灵活，多人协作代码调试和维护成本高2. 定义TypeScript 是 JavaScript 的一个超集，而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程，可以理解成是 js 的强类型版本这里的Type：类型（指的就是静态类型检查）3. 走马观花学一下npm安装...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1565077200000,"createTime":1570346329000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102231802","articleType":2,"viewCount":103,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"使用POI操作Excel时对事先写入模板的公式强制执行","description":"场景：POI读取Excel模板。当使用POI操作Excel时，发现由POI生成的公式能够在打开Excel是被执行，而事先手工写入Excel模板文件的公式则不自动被调用，必须手动双击该Cell才能生效。采取的办法：1.使用cell.setCellFormula方法重新在制定Cell里写入公式。2.使用sheet.setForceFormulaRecalculati...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566635220000,"createTime":1570163909000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102064635","articleType":2,"viewCount":52,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"centos7下python3和pycharm安装","description":"1.python3安装直接到官网下载或在以下地址下载让后解压安装下载地址：https:\u002F\u002Fwww.python.org\u002Fftp\u002Fpython\u002F安装参考博客：https:\u002F\u002Fwww.cnblogs.com\u002Fanxminise\u002Fp\u002F9650206.html我的安装时python3.7.4版https:\u002F\u002Fwww.cnblogs.com\u002Fs-seven\u002Fp\u002F9105973....","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1564246140000,"createTime":1570163909000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F102064636","articleType":2,"viewCount":103,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"vue_插槽的理解和使用","description":"对于插槽的概念和使用，这是vue的一个难点，这需要我们静下心来，慢慢研究。以下是我这两天通过官网和其他资料的学习和使用总结出来的笔记，如有错误或者有不同见解的，欢迎留言，一起学习。什么是插槽？插槽就是子组件中的提供给父组件使用的一个占位符，用&lt;slot&gt;&lt;\u002Fslot&gt; 表示，父组件可以在这个占位符中填充任何模板代码，如 HTML、组件等，填充的内容会替换子...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1568626080000,"createTime":1570041782000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101958769","articleType":2,"viewCount":94,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"vue-route+webpack部署单页路由项目，访问刷新出现404问题","description":"问题描述：前端同事使用Vue.js框架，利用vue-route结合webpack编写了一个单页路由项目，运维协助在服务器端配置nginx。部署完成后，访问首页没问题，从首页里打开二级页面没问题，但是所有的二级页面打开后，再次刷新，就会出现404现象问题原因：刷新页面时访问的资源在服务端找不到，因为vue-router设置的路径不是真实存在的路径。如上的404现象，是因为在nginx配...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1569813480000,"createTime":1570041777000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101958765","articleType":2,"viewCount":78,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"监控工具之---Prometheus表达式promQL生产中应用(五)","description":"cpu利用率　　方法一：100 - (avg(increase(node_cpu_seconds_total{mode=\"idle\"}[1m])) by (instance) \u002F 60) * 100　　方法二：100 - avg(rate(node_cpu_seconds_total{mode=\"idle\"}[1m])) by (instance)  * 1...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1569381720000,"createTime":1569919188000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101851538","articleType":2,"viewCount":161,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"监控工具之---Prometheus查询持久性(六)","description":"查询持续性　　到目前为止，我们只是在表达式浏览器中运行查询。虽然查看该查询的输出很方便，但结果仍然是临时存储在Prometheus服务器上，我们可以通过以下三种方式使查询持久化：记录规则：根据查询创建新指标报警规则：从查询生成警报可视化：使用Grafana等仪表板可视化查询　　记录规则存储在Prometheus服务器上，位于Prometheus服务器加载的文件...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1569573300000,"createTime":1569919188000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101851539","articleType":2,"viewCount":71,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"监控工具之---Prometheus数据可视化Grafana(七)","description":"Grafana安装　　安装系统为Ubuntu，配置grafana apt源# sudo add-apt-repository \"deb https:\u002F\u002Fpackages.grafana.com\u002Foss\u002Fdeb stable main\"　　添加gpg秘钥# wget -q -O - https:\u002F\u002Fpackages.grafana.com\u002Fgpg.key |...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1568107380000,"createTime":1569919186000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101851537","articleType":2,"viewCount":85,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Grafana Configuration 参数详解(1)","description":"---恢复内容开始---　　Granfana Configuration 配置文件grafana.ini包含很多选项，可对其进行调整，调整后重启grafana服务方可生效。Paths配置段#################################### Paths ####################################[paths]# P...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1568965980000,"createTime":1569919186000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101851536","articleType":2,"viewCount":86,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Azure Iaas基础之---创建虚拟机","description":"什么是订阅？　　订阅是提前预定的一种方式，它为用户使用Microsoft Azure的所有资源、支付，以及账单提供了链接入口。用户需要对订阅进行充值的操作才能开始使用Azuer的服务。　　在Mincrosoft Azure中，订阅与账户是绑定的，一个账户中可以购买多个订阅，但每个订阅的费用以及计费和使用是独立分开的，没有关联。但对于订阅来说，仅只能与一个账户做绑定。什么是资...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1565258760000,"createTime":1569919184000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101851534","articleType":2,"viewCount":56,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"监控工具之---Prometheus 安装详解(三)","description":"Prometheus安装　　在centos、ubuntu等系统上安装步骤如下：　　下载prometheus最新安装包# wget https:\u002F\u002Fgithub.com\u002Fprometheus\u002Fprometheus\u002Freleases\u002Fdownload\u002Fv2.12.0\u002Fprometheus-2.12.0.linux-amd64.tar.gz　　将下载好的安装进行解...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1568083320000,"createTime":1569919184000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101851533","articleType":2,"viewCount":120,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Docker技术入门之---网络配置(8)","description":"　　Docker启动时会在主机上自动创建一个docker0虚拟网桥，实际上是一个Linux网桥，可以理解为一个软件交换机，他会在挂载其上的接口之间进行转发：如图所示　　　　创建一个Docker容器的时候，同时会创建一对veth pair接口。这对接口一端在容器内，即eth0；另一端在本地并被挂载到docker0网桥，名称以veth开头，通过这种方式，主机可以跟容器通信，容器之间也...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1564022460000,"createTime":1569919183000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101851532","articleType":2,"viewCount":27,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Docker技术入门之---为镜像添加SSH服务(7)","description":"本章将详细介绍创建容器的两种方法：基于Docker commit命令创建基于Dockerfile创建基于docker commit命令创建一个容器　　首先，启动一个centos容器　　# docker run -it centos \u002Fbin\u002Fbash　　安装openssh-server net-tools服务　　# yum -y install op...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1563780000000,"createTime":1569919182000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101851531","articleType":2,"viewCount":26,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Docker技术入门之---使用Dockerfile创建镜像(6)","description":"　　Dockerfile是一个文本格式的配置文件，用户可以使用Dockerfile来快速创建自定义的镜像。 Dockerfile指令说明Dockerfile指令说明指令说明FROM指定所创建镜像的基础镜像MAINTAINER指定维护者信息...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1562906280000,"createTime":1569919181000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101851530","articleType":2,"viewCount":27,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Docker技术入门之---Docker端口映射与容器互联(4)","description":"　　在实践中，经常会碰到需要多个服务组件容器共同协作的情况，这往往需要多个容器之间有能够互相访问到对方的服务。 　　除了通过网络访问外，Docker还提供了两个很方便的功能来满足服务访问的基本需求： 允许映射容器内应用的服务端口到本地宿主主机互联机制实现多个容器间通过容器名来快速访问 端口映射实现访问容器　　从外部访问容器应用　　在启动容器的时候，...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1562832120000,"createTime":1569919181000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101851529","articleType":2,"viewCount":35,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Docker技术入门之---Docker数据管理(3)","description":"　　生产环境中使用Docker的过程中，往往需要对数据进行持久化，或者需要在多个容器之间进行数据␀享，这必然涉及容器的数据管理操作。　　容器中管理数据主要有两种方式：数据卷（Data Volumes）：容器内数据直接映射到本地主机环境；　　数据卷容器（Data Volume Containers）：使用特定容器维护数据卷 。数据卷　　数...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1562817180000,"createTime":1569919179000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101851527","articleType":2,"viewCount":24,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Docker技术入门之---Docker配置阿里云镜像加速(5)","description":"　　默认Docker拉取镜像是从Docker Hub上拉取，但由于防火墙的原因，导致镜像下载非常慢。为了提高拉取镜像的速度，可以配置阿里镜像或是网易镜像加速，通过使用经验推荐配置阿里镜像。　　登录阿里云官网，选择如下　　点击管理控制台找到镜像中心---镜像加速器。如图所示　　我使用的是centos，下面讲一下，centos6、centos7如何配置阿里云镜像加...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1562896800000,"createTime":1569919179000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101851528","articleType":2,"viewCount":49,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Kubernetes容器编排技术---Kubernetes基本概念和术语(一)","description":"Kubernetes基本概念和术语　　1、Master　　Kubernetes里的Master指的是集群控制节点，每个Kubernetes集群里需要有一个Master节点来负责整个集群的管理和控制，基本上Kubernetes所有的控制命令都是发给它，它来负责具体的执行过程，我们后面所有执行的命令都是在Master节点上运行的。　　Master节点运行关键进程：Kube...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1562149080000,"createTime":1569919177000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101851525","articleType":2,"viewCount":51,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Docker技术入门之---Docker核心概念：镜像、容器、仓库(2)","description":"　　Docker的大部分操作都围绕着它的三大核心概念——镜像、容器和仓库而展开。因此，准确把握这三大核心概念对于掌握Docker技术尤为重要 。docker命令结构图根据命令用途本身对其进行了分类，帮助初学者尽快掌握Docker命令，如下图：Docker子命令分类子命令分类子命令Docker环境信息info、version...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1562644080000,"createTime":1569919177000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101851526","articleType":2,"viewCount":71,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"监控工具之---Prometheus 配置exporter四)","description":"　　Prometheus提供两种存储方式，分别为本地存储和远端存储。　　本地存储通过Prometheus自带的时序数据库将数据保存在本地，从而实现高性能读写。但是时序数据库毕竟是非集群的数据库，这样就限制了他的存储容量，无法保存大量的历史监控数据，为此，Prometheus引入了远端存储。安装Exporter　　安装了Node Exporter程序，该程序对外暴露了一个用于...","hasOriginal":false,"diggCount":1,"commentCount":0,"postTime":1568016180000,"createTime":1569919175000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101851524","articleType":2,"viewCount":228,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Docker技术入门之---Docker安装(1)","description":"Docker从1.13版本之后采用时间线的方式作为版本号，分为社区版CE和企业版EE。社区版是免费提供给个人开发者和小型团体使用的，企业版会提供额外的收费服务，比如经过官方测试认证过的基础设施、容器、插件等。社区版按照stable和edge两种方式发布，每个季度更新stable版本，如17.06，17.09；每个月份更新edge版本，如17.09，17.10。具体...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1562639400000,"createTime":1569919175000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101851523","articleType":2,"viewCount":18,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Kubernetes容器编排技术---Kubernetes基于kubeadm安装与配置(二)","description":"Kubernetes安装与配置准备环境kubernetes-masterubuntu 18.0410.10.0.197kubernetes-node1centos 710.10.0.164kubernets-master配置apt源　　配置kubernets源apt-get update &am...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566471360000,"createTime":1569919173000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101851521","articleType":2,"viewCount":62,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Kubernetes容器编排技术---kubectl命令行工具用法详解(三)","description":"kubectl命令行工具用法详解kubect用法概述　　kubectl命令行的语法如下：　$ kubectl [command] [TYPE] [NAME] [flags]command：子命令，用于操作Kubernetes集群资源对象的命令，例如create、delete、describe、get、apply等。TYPE：资源对象的类型，区分大...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566812160000,"createTime":1569919173000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101851522","articleType":2,"viewCount":75,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":".net core2.2上传文件总结","description":"总结一下.net core的上传文件操作,这里主要分上传到本地的也就是MVC的,另一种是上传到WebAPi的.一、Web端1.新建一个.net core mvc项目2.这里的版本是.net core 2.2.43.新建一个控制器TestControllerusing System;using System.Collections.Generic;usin...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1565343300000,"createTime":1569839035000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101784835","articleType":2,"viewCount":66,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Git创建远程分支并提交代码到远程分支","description":"1.可以在VS中新建分支2.可以通过git branch -r 命令查看远端库的分支情况这些红色都是远程的分支3.从已有的分支创建新的分支(如从master分支),创建一个dev分支 (不用vs建分支 可以这样建)4.建立本地到远端仓库的链接 --这样代码才能提交上去使用命令行git push --set-upstream origin d...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1565841780000,"createTime":1569839031000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101784831","articleType":2,"viewCount":82,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":".net core 2.2 中IHttpClientFactory的使用","description":"在.net core中使用HttpClient请求api,有很多资源的问题,比如使用using的时候,虽然可以释放资源,但是套接字（socket）也不会立即释放,所以.net core2.1中,新增了IHttpClientFactory.将其用于配置和创建应用中的HttpClient实例。这能带来以下好处：提供一个中心位置，用于命名和配置逻辑HttpClient实例。...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1565344140000,"createTime":1569839029000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101784829","articleType":2,"viewCount":124,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"document.visibilityState 监听浏览器","description":"document.hidden：表示页面是否隐藏的布尔值。页面隐藏包括 页面在后台标签页中 或者 浏览器最小化 （注意，页面被其他软件遮盖并不算隐藏，比如打开的 sublime 遮住了浏览器）。document.visibilityState：表示下面 4 个可能状态的值hidden：页面在后台标签页中或者浏览器最小化visible：页面在前台标签页中prerender：...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1565232900000,"createTime":1569839027000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101784828","articleType":2,"viewCount":157,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"ps cc2019 安装教程","description":"ps cc2019 安装教程        \t                                            \t                    posted on 2019-08-18 18:02雪山看雪 阅读(...) 评论(...)  编辑 收藏        ...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566122520000,"createTime":1569832320000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101778705","articleType":2,"viewCount":220,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"office2019 安装教程","description":"office2019 安装教程        \t                                            \t                    posted on 2019-08-18 17:59雪山看雪 阅读(...) 评论(...)  编辑 收藏       ...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566122340000,"createTime":1569832317000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101778703","articleType":2,"viewCount":525,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"office2016 安装教程","description":"office2016 安装教程        \t                                            \t                    posted on 2019-08-18 17:56雪山看雪 阅读(...) 评论(...)  编辑 收藏       ...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566122160000,"createTime":1569832315000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101778702","articleType":2,"viewCount":476,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"office 2010 安装教程","description":"office 2010 安装教程        \t                                            \t                    posted on 2019-08-18 17:42雪山看雪 阅读(...) 评论(...)  编辑 收藏      ...","hasOriginal":false,"diggCount":1,"commentCount":0,"postTime":1566121320000,"createTime":1569832313000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101778698","articleType":2,"viewCount":248,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"office2007 安装教程","description":"office2007 安装教程        \t                                            \t                    posted on 2019-08-18 11:25雪山看雪 阅读(...) 评论(...)  编辑 收藏       ...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566098700000,"createTime":1569832311000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101778696","articleType":2,"viewCount":201,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"office2013 安装教程","description":"office2013 安装教程        \t                                            \t                    posted on 2019-08-18 17:52雪山看雪 阅读(...) 评论(...)  编辑 收藏       ...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566121920000,"createTime":1569832310000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101778695","articleType":2,"viewCount":322,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"office2003 安装教程","description":"office2003 安装教程        \t                                            \t                    posted on 2019-08-18 11:20雪山看雪 阅读(...) 评论(...)  编辑 收藏       ...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566098400000,"createTime":1569832309000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101778694","articleType":2,"viewCount":100,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"PE系统","description":"PE系统        \t                                            \t                    posted on 2019-08-18 11:16雪山看雪 阅读(...) 评论(...)  编辑 收藏            转载于...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566098160000,"createTime":1569832308000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101778692","articleType":2,"viewCount":86,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"PDF转换工具","description":"PDF转换工具        \t                                            \t                    posted on 2019-08-18 11:08雪山看雪 阅读(...) 评论(...)  编辑 收藏           ...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1566097680000,"createTime":1569832306000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101778691","articleType":2,"viewCount":33,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"lettcode 上的几道哈希表与链表组合的数据结构题","description":"目录                    LRU缓存        LFU缓存        全O(1)的数据结构            lettcode 上的几道哈希表与链表组合的数据结构题下面这几道题都要求在O(1)时间内完成每种操作。LRU缓存LRU是Least Recently Used的缩写，即最近最少使用，是一种常用的页面置换算法，选择最...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1567743480000,"createTime":1569829676000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101776041","articleType":2,"viewCount":57,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"Python规范:提高可读性","description":"PEP 8 规范PEP 是 Python Enhancement Proposal 的缩写，翻译过来叫“Python 增强规范”。缩进规范　　PEP 8 规范告诉我们，请选择四个空格的缩进，不要使用 Tab，更不要 Tab 和空格混着用。 第二个要注意的是，每行最大长度请限制在 79 个字符。空行规范　　PEP 8 规定，全局的类和函数的上方需要空两个空行，而类的函数之间需要空...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1569585060000,"createTime":1569828973000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101775307","articleType":2,"viewCount":89,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"30段极简Python代码：这些小技巧你都Get了么","description":"学 Python 怎样才最快，当然是实战各种小项目，只有自己去想与写，才记得住规则。本文是 30 个极简任务，初学者可以尝试着自己实现；本文同样也是 30 段代码，Python 开发者也可以看看是不是有没想到的用法。Python 是机器学习最广泛采用的编程语言，它最重要的优势在于编程的易用性。如果读者对基本的 Python 语法已经有一些了解，那么这篇文章可能会给你一些启发。作者简单概...","hasOriginal":false,"diggCount":5,"commentCount":0,"postTime":1569324060000,"createTime":1569828972000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101775306","articleType":2,"viewCount":983,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"15个Python面试问题","description":"引言想找一份Python开发工作吗？那你很可能得证明自己知道如何使用Python。下面这些问题涉及了与Python相关的许多技能，问题的关注点主要是语言本身，不是某个特定的包或模块。每一个问题都可以扩充为一个教程，如果可能的话。某些问题甚至会涉及多个领域。我之前还没有出过和这些题目一样难的面试题，如果你能轻松地回答出来的话，赶紧去找份工作吧！问题1到底什么是Python？你可以在...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1569413880000,"createTime":1569828971000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101775305","articleType":2,"viewCount":73,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"python数据类型详解（全面）","description":"1、字符串1.1、如何在Python中使用字符串a、使用单引号(')用单引号括起来表示字符串，例如：str='this is string';print str;b、使用双引号(\")双引号中的字符串与单引号中的字符串用法完全相同，例如：str=\"this is string\";print str;c、使用三引号(''')利用三引号，表示多行的字符串，可以在三引号中自...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1565874960000,"createTime":1569828969000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101775301","articleType":2,"viewCount":78,"rtype":"article"},{"type":"blog","formatTime":"2 年前","title":"致Python初学者的六点建议","description":"Python是最容易学习的编程语言之一，其语法近似英语。通常，初学者只会遇到一些小麻烦，如强制缩进、在函数中使用self等。然而，当开始阅读、复制和编辑他人代码时，麻烦就接踵而至了。这里，我将解释五个关于Python的概念，这些概念将有助于初学者修改他人代码。这些建议通过总结Python开发新手在研讨会上遇到的问题以及分析开发者社区的在线讨论编写而成的。这些开发者社区主要关注API的...","hasOriginal":false,"diggCount":0,"commentCount":0,"postTime":1569157800000,"createTime":1569828969000,"url":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599\u002Farticle\u002Fdetails\u002F101775302","articleType":2,"viewCount":71,"rtype":"article"}]},"versionSwitchTips":[{"itemType":"","description":"1. 新版持续迭代中，用以满足大家的需求和体验；\n2. 若对新版有想法或建议，欢迎随时进行反馈！","title":"您即将切换至旧版个人主页","url":"","images":[""],"ext":{}}]}},"CFG":{"ALIPLAYER_VERSION":"v4","ALIPLAYER_H5_VERSION":"mobile_v1","ENV":"prod","ROOT_URL":"https:\u002F\u002Fcms-mall.csdn.net\u002F","VUE_APP_API_URL_SERVER":"http:\u002F\u002Fcms-community-api.internal.csdn.net\u002F","VUE_APP_API_URL":"https:\u002F\u002Fcms-api.csdn.net\u002F","LOGIN_URL":"https:\u002F\u002Fpassport.csdn.net\u002Faccount\u002Flogin","VUE_APP_COMMUNITY_API_URL":"https:\u002F\u002Fcommunity-api.csdn.net\u002F","VUE_APP_CCLOUD_API_URL":"http:\u002F\u002Fcommunity-cloud-api.csdn.net\u002F","VUE_APP_COMMUNITY_ASK_API_URL":"https:\u002F\u002Fmp-ask.csdn.net\u002F","VUE_APP_ME_URL":"https:\u002F\u002Fme.csdn.net\u002F","SENTRY_URL":"https:\u002F\u002Fecf38ba949474cb891ff04c224d990dd@sentry.csdn.net\u002F20","VUE_USER_PROFILE":"https:\u002F\u002Fblog.csdn.net\u002F","VUE_MINI_SHOP":"https:\u002F\u002Fmall.csdn.net\u002F","APPKEY":"203871969","APPSECRET":"UZCZUodD1gRrgGldZlsi7bd1XcXXlrft"},"queries":{"pageId":[],"domain":["blog.csdn.net\u002Fuser"],"username":["weixin_30824599"],"hostname":["blog.csdn.net"],"size":100},"basePath":"cms-user.internal.csdn.net\u002Fuser\u002Fweixin_30824599","canonical":"https:\u002F\u002Fblog.csdn.net\u002Fweixin_30824599","active":0,"navBarFixed":false};</script><script type="text/javascript" src="https://csdnimg.cn/release/cmsfe/public/js/runtime.5aafb0f2.js"></script><script type="text/javascript" src="https://csdnimg.cn/release/cmsfe/public/js/chunk/common.2750a17e.js"></script><script type="text/javascript" src="https://csdnimg.cn/release/cmsfe/public/js/chunk/tpl/user-profile/index.979092ae.js"></script></body> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> 
        <script>
          window.csdn.sideToolbar = {
            options: {
              contentEl: document.getElementsByClassName("user-profile-body-right")[0]
            }
          };
        </script>
       
         <script src="https://g.csdnimg.cn/side-toolbar/3.0/side-toolbar.js" ></script>
       
         <script src="https://g.csdnimg.cn/common/csdn-toolbar/csdn-toolbar.js"></script>
       <!----> <!----> <!----> <!----> 
        <script src="https://g.csdnimg.cn/user-medal/1.0.6/user-medal.js"></script>
      </html>